{
  "address": "0xed16784A5e2A5ef4E3AFA9ab435Eea3BF1dc72Ee",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_stakingToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_rewardRate",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RewardClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Staked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "claimReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "claimableRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardDebt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xac2a2f5b6fefa8c1e1a716e50612ae4b9bd3ca3d0bf4e89eb908924678e9f587",
  "receipt": {
    "to": null,
    "from": "0xC0B7CDc5647F42d35843F33134aB26748F08d200",
    "contractAddress": "0xed16784A5e2A5ef4E3AFA9ab435Eea3BF1dc72Ee",
    "transactionIndex": 42,
    "gasUsed": "485604",
    "logsBloom": "0x
    "blockHash": "0x2f2968e841e2ac7ef3a16145494adc6c9a4f647314174ac1618d6e29734f3192",
    "transactionHash": "0xac2a2f5b6fefa8c1e1a716e50612ae4b9bd3ca3d0bf4e89eb908924678e9f587",
    "logs": [],
    "blockNumber": 7923490,
    "cumulativeGasUsed": "10972516",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x3D2Af3D5833150eD15b247bbcF42e95B16c495A3",
    "10000000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "ac37644ae8cf13745e9ca882c5dfa800",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardRate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"claimableRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20Staking.sol\":\"ERC20Staking\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"contracts/ERC20Staking.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract ERC20Staking {\\n    IERC20 public stakingToken;\\n    uint256 public rewardRate;\\n\\n    struct Stake {\\n        uint256 amount;\\n        uint256 startTime;\\n        uint256 rewardDebt;\\n    }\\n\\n    mapping(address => Stake) public stakes;\\n\\n    event Staked(address indexed user, uint256 amount);\\n    event Withdrawn(address indexed user, uint256 amount);\\n    event RewardClaimed(address indexed user, uint256 amount);\\n\\n    constructor(IERC20 _stakingToken, uint256 _rewardRate) {\\n        stakingToken = _stakingToken;\\n        rewardRate = _rewardRate;\\n    }\\n\\n    function stake(uint256 amount) external {\\n        require(amount > 0, \\\"Cannot stake zero tokens\\\");\\n        require(stakingToken.transferFrom(msg.sender, address(this), amount), \\\"Stake failed\\\");\\n\\n        Stake storage userStake = stakes[msg.sender];\\n        if (userStake.amount > 0) {\\n            userStake.rewardDebt += _calculateReward(msg.sender);\\n        }\\n\\n        userStake.amount += amount;\\n        userStake.startTime = block.timestamp;\\n\\n        emit Staked(msg.sender, amount);\\n    }\\n\\n    function withdraw(uint256 amount) external {\\n        Stake storage userStake = stakes[msg.sender];\\n        require(userStake.amount >= amount, \\\"Insufficient staked amount\\\");\\n\\n        userStake.rewardDebt += _calculateReward(msg.sender);\\n        userStake.amount -= amount;\\n        stakingToken.transfer(msg.sender, amount);\\n\\n        emit Withdrawn(msg.sender, amount);\\n    }\\n\\n    function claimReward() external {\\n        Stake storage userStake = stakes[msg.sender];\\n        uint256 reward = _calculateReward(msg.sender) + userStake.rewardDebt;\\n        require(reward > 0, \\\"No rewards to claim\\\");\\n\\n        userStake.rewardDebt = 0;\\n        userStake.startTime = block.timestamp;\\n        stakingToken.transfer(msg.sender, reward);\\n\\n        emit RewardClaimed(msg.sender, reward);\\n    }\\n\\n    function claimableRewards(address user) external view returns (uint256) {\\n        return _calculateReward(user) + stakes[user].rewardDebt;\\n    }\\n\\n    function _calculateReward(address user) internal view returns (uint256) {\\n        Stake storage userStake = stakes[user];\\n        return (userStake.amount * rewardRate * (block.timestamp - userStake.startTime)) / 1e18;\\n    }\\n}\",\"keccak256\":\"0x10a6071cecb82d201d0d3f51dc2b783b9b321748b4bd42f983e6d0d310b9764d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161079a38038061079a83398101604081905261002f91610058565b600080546001600160a01b0319166001600160a01b039390931692909217909155600155610092565b6000806040838503121561006b57600080fd5b82516001600160a01b038116811461008257600080fd5b6020939093015192949293505050565b6106f9806100a16000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80637b0a47ee1161005b5780637b0a47ee14610110578063a694fc3a14610127578063b88a802f1461013a578063dc01f60d1461014257600080fd5b806316934fc4146100825780632e1a7d4d146100d057806372f702f3146100e5575b600080fd5b6100b06100903660046105ea565b600260208190526000918252604090912080546001820154919092015483565b604080519384526020840192909252908201526060015b60405180910390f35b6100e36100de366004610613565b610155565b005b6000546100f8906001600160a01b031681565b6040516001600160a01b0390911681526020016100c7565b61011960015481565b6040519081526020016100c7565b6100e3610135366004610613565b6102a4565b6100e3610433565b6101196101503660046105ea565b61055a565b33600090815260026020526040902080548211156101ba5760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e74207374616b656420616d6f756e7400000000000060448201526064015b60405180910390fd5b6101c33361058f565b8160020160008282546101d69190610642565b90915550508054829082906000906101ef908490610655565b909155505060005460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610245573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102699190610668565b5060405182815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5906020015b60405180910390a25050565b600081116102f45760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f74207374616b65207a65726f20746f6b656e73000000000000000060448201526064016101b1565b6000546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561034b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036f9190610668565b6103aa5760405162461bcd60e51b815260206004820152600c60248201526b14dd185ad94819985a5b195960a21b60448201526064016101b1565b3360009081526002602052604090208054156103e2576103c93361058f565b8160020160008282546103dc9190610642565b90915550505b818160000160008282546103f69190610642565b909155505042600182015560405182815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d90602001610298565b33600081815260026020819052604082209081015490926104539061058f565b61045d9190610642565b9050600081116104a55760405162461bcd60e51b81526020600482015260136024820152724e6f207265776172647320746f20636c61696d60681b60448201526064016101b1565b6000600283018190554260018401555460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610503573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105279190610668565b5060405181815233907f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f724190602001610298565b6001600160a01b03811660009081526002602081905260408220015461057f8361058f565b6105899190610642565b92915050565b6001600160a01b03811660009081526002602052604081206001810154670de0b6b3a7640000906105c09042610655565b60015483546105cf919061068a565b6105d9919061068a565b6105e391906106a1565b9392505050565b6000602082840312156105fc57600080fd5b81356001600160a01b03811681146105e357600080fd5b60006020828403121561062557600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156105895761058961062c565b818103818111156105895761058961062c565b60006020828403121561067a57600080fd5b815180151581146105e357600080fd5b80820281158282048414176105895761058961062c565b6000826106be57634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212206f53e4a3c617f255b5531ec152c21b0b7c2b8ac57a4dc39f1e082e6b1a61828a64736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80637b0a47ee1161005b5780637b0a47ee14610110578063a694fc3a14610127578063b88a802f1461013a578063dc01f60d1461014257600080fd5b806316934fc4146100825780632e1a7d4d146100d057806372f702f3146100e5575b600080fd5b6100b06100903660046105ea565b600260208190526000918252604090912080546001820154919092015483565b604080519384526020840192909252908201526060015b60405180910390f35b6100e36100de366004610613565b610155565b005b6000546100f8906001600160a01b031681565b6040516001600160a01b0390911681526020016100c7565b61011960015481565b6040519081526020016100c7565b6100e3610135366004610613565b6102a4565b6100e3610433565b6101196101503660046105ea565b61055a565b33600090815260026020526040902080548211156101ba5760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e74207374616b656420616d6f756e7400000000000060448201526064015b60405180910390fd5b6101c33361058f565b8160020160008282546101d69190610642565b90915550508054829082906000906101ef908490610655565b909155505060005460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610245573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102699190610668565b5060405182815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5906020015b60405180910390a25050565b600081116102f45760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f74207374616b65207a65726f20746f6b656e73000000000000000060448201526064016101b1565b6000546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561034b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036f9190610668565b6103aa5760405162461bcd60e51b815260206004820152600c60248201526b14dd185ad94819985a5b195960a21b60448201526064016101b1565b3360009081526002602052604090208054156103e2576103c93361058f565b8160020160008282546103dc9190610642565b90915550505b818160000160008282546103f69190610642565b909155505042600182015560405182815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d90602001610298565b33600081815260026020819052604082209081015490926104539061058f565b61045d9190610642565b9050600081116104a55760405162461bcd60e51b81526020600482015260136024820152724e6f207265776172647320746f20636c61696d60681b60448201526064016101b1565b6000600283018190554260018401555460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610503573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105279190610668565b5060405181815233907f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f724190602001610298565b6001600160a01b03811660009081526002602081905260408220015461057f8361058f565b6105899190610642565b92915050565b6001600160a01b03811660009081526002602052604081206001810154670de0b6b3a7640000906105c09042610655565b60015483546105cf919061068a565b6105d9919061068a565b6105e391906106a1565b9392505050565b6000602082840312156105fc57600080fd5b81356001600160a01b03811681146105e357600080fd5b60006020828403121561062557600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156105895761058961062c565b818103818111156105895761058961062c565b60006020828403121561067a57600080fd5b815180151581146105e357600080fd5b80820281158282048414176105895761058961062c565b6000826106be57634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212206f53e4a3c617f255b5531ec152c21b0b7c2b8ac57a4dc39f1e082e6b1a61828a64736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 985,
        "contract": "contracts/ERC20Staking.sol:ERC20Staking",
        "label": "stakingToken",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IERC20)877"
      },
      {
        "astId": 987,
        "contract": "contracts/ERC20Staking.sol:ERC20Staking",
        "label": "rewardRate",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 999,
        "contract": "contracts/ERC20Staking.sol:ERC20Staking",
        "label": "stakes",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_struct(Stake)994_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)877": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(Stake)994_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct ERC20Staking.Stake)",
        "numberOfBytes": "32",
        "value": "t_struct(Stake)994_storage"
      },
      "t_struct(Stake)994_storage": {
        "encoding": "inplace",
        "label": "struct ERC20Staking.Stake",
        "members": [
          {
            "astId": 989,
            "contract": "contracts/ERC20Staking.sol:ERC20Staking",
            "label": "amount",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 991,
            "contract": "contracts/ERC20Staking.sol:ERC20Staking",
            "label": "startTime",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 993,
            "contract": "contracts/ERC20Staking.sol:ERC20Staking",
            "label": "rewardDebt",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}